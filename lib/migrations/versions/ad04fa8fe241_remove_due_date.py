"""Remove due date 

Revision ID: ad04fa8fe241
Revises: 7733168daa6e
Create Date: 2024-03-23 18:32:23.523567

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ad04fa8fe241'
down_revision: Union[str, None] = '7733168daa6e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade():
    # Step 1: Create a new 'tasks_new' table with the foreign key constraint
    op.create_table(
        'tasks_new',
        sa.Column('id', sa.Integer, primary_key=True),
        sa.Column('title', sa.String),
        sa.Column('description', sa.String),
        sa.Column('status', sa.String),
        sa.Column('user_id', sa.Integer, sa.ForeignKey('users.id'))
    )

    # Step 2: Copy data from 'tasks' to 'tasks_new'
    op.execute('INSERT INTO tasks_new (id, title, description, status, user_id) SELECT id, title, description, status, user_id FROM tasks')

    # Step 3: Drop the old 'tasks' table
    op.drop_table('tasks')

    # Step 4: Rename 'tasks_new' to 'tasks'
    op.rename_table('tasks_new', 'tasks')

def downgrade():
    # This is a downgrade script, you might need to implement it based on your needs
    pass


# def upgrade() -> None:
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.add_column('tasks', sa.Column('user_id', sa.Integer(), nullable=True))
#     op.create_foreign_key(None, 'tasks', 'users', ['user_id'], ['id'])
#     op.drop_column('tasks', 'due_date')
#     # ### end Alembic commands ###


# def downgrade() -> None:
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.add_column('tasks', sa.Column('due_date', sa.VARCHAR(), nullable=True))
#     op.drop_constraint(None, 'tasks', type_='foreignkey')
#     op.drop_column('tasks', 'user_id')
#     # ### end Alembic commands ###
